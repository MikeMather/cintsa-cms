[{"/Users/mike/Documents/cintsa-cms/src/index.tsx":"1","/Users/mike/Documents/cintsa-cms/src/reportWebVitals.ts":"2","/Users/mike/Documents/cintsa-cms/src/App.tsx":"3","/Users/mike/Documents/cintsa-cms/src/components/Router/Router.tsx":"4","/Users/mike/Documents/cintsa-cms/src/components/styled/Theme.tsx":"5","/Users/mike/Documents/cintsa-cms/src/components/styled/Blanket.tsx":"6","/Users/mike/Documents/cintsa-cms/src/components/styled/Modal.tsx":"7","/Users/mike/Documents/cintsa-cms/src/components/Authenticator/Authenticor.tsx":"8","/Users/mike/Documents/cintsa-cms/src/components/Header/Header.tsx":"9","/Users/mike/Documents/cintsa-cms/src/components/Header/HeaderStyles.tsx":"10","/Users/mike/Documents/cintsa-cms/src/components/styled/Page.tsx":"11","/Users/mike/Documents/cintsa-cms/src/components/Button/Button.tsx":"12","/Users/mike/Documents/cintsa-cms/src/state/Reducer.ts":"13","/Users/mike/Documents/cintsa-cms/src/state/StorageHandler.ts":"14","/Users/mike/Documents/cintsa-cms/src/components/Workflow/Workflow.tsx":"15","/Users/mike/Documents/cintsa-cms/src/components/Workflow/StyledWorkflow.tsx":"16","/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowColumn.tsx":"17","/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowCard.tsx":"18","/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowHeader.tsx":"19","/Users/mike/Documents/cintsa-cms/src/state/FileContentHandler.ts":"20","/Users/mike/Documents/cintsa-cms/src/state/Modifiers.ts":"21","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/StyledContextEditor.jsx":"22","/Users/mike/Documents/cintsa-cms/src/components/PiecesPage/PiecesPage.tsx":"23","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorPage.tsx":"24","/Users/mike/Documents/cintsa-cms/src/components/PiecesPage/StyledPiecesPage.tsx":"25","/Users/mike/Documents/cintsa-cms/src/components/PiecesSidebar/PiecesSidebar.tsx":"26","/Users/mike/Documents/cintsa-cms/src/components/PiecesSidebar/StyledPiecesSidebar.tsx":"27","/Users/mike/Documents/cintsa-cms/src/components/PieceCard/PieceCard.tsx":"28","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorSidebar.tsx":"29","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/MarkdownEditor.tsx":"30","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorTitle.tsx":"31","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/FrontMatterList.tsx":"32"},{"size":615,"mtime":1610226915497,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1610165298613,"results":"35","hashOfConfig":"34"},{"size":729,"mtime":1610504498875,"results":"36","hashOfConfig":"34"},{"size":1592,"mtime":1610504059619,"results":"37","hashOfConfig":"34"},{"size":1436,"mtime":1610584459302,"results":"38","hashOfConfig":"34"},{"size":275,"mtime":1610226204095,"results":"39","hashOfConfig":"34"},{"size":194,"mtime":1610500270851,"results":"40","hashOfConfig":"34"},{"size":1196,"mtime":1611021825485,"results":"41","hashOfConfig":"34"},{"size":963,"mtime":1610294098105,"results":"42","hashOfConfig":"34"},{"size":1172,"mtime":1610237134261,"results":"43","hashOfConfig":"34"},{"size":172,"mtime":1610250351863,"results":"44","hashOfConfig":"34"},{"size":766,"mtime":1610583116736,"results":"45","hashOfConfig":"34"},{"size":488,"mtime":1610589999285,"results":"46","hashOfConfig":"34"},{"size":3302,"mtime":1610589644295,"results":"47","hashOfConfig":"34"},{"size":3125,"mtime":1610590014487,"results":"48","hashOfConfig":"34"},{"size":2397,"mtime":1610500322925,"results":"49","hashOfConfig":"34"},{"size":1017,"mtime":1610501132385,"results":"50","hashOfConfig":"34"},{"size":664,"mtime":1610501311592,"results":"51","hashOfConfig":"34"},{"size":560,"mtime":1610416566518,"results":"52","hashOfConfig":"34"},{"size":1125,"mtime":1610589618010,"results":"53","hashOfConfig":"34"},{"size":688,"mtime":1610589973452,"results":"54","hashOfConfig":"34"},{"size":2311,"mtime":1610589376781,"results":"55","hashOfConfig":"34"},{"size":469,"mtime":1610416160253,"results":"56","hashOfConfig":"34"},{"size":2504,"mtime":1610590266084,"results":"57","hashOfConfig":"34"},{"size":144,"mtime":1610416169376,"results":"58","hashOfConfig":"34"},{"size":1079,"mtime":1610416547467,"results":"59","hashOfConfig":"34"},{"size":606,"mtime":1610416213469,"results":"60","hashOfConfig":"34"},{"size":1351,"mtime":1610501044776,"results":"61","hashOfConfig":"34"},{"size":2169,"mtime":1610583714204,"results":"62","hashOfConfig":"34"},{"size":1313,"mtime":1610589452223,"results":"63","hashOfConfig":"34"},{"size":1064,"mtime":1610589943594,"results":"64","hashOfConfig":"34"},{"size":2975,"mtime":1610586026106,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1wlsqhp",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},"/Users/mike/Documents/cintsa-cms/src/index.tsx",[],["143","144"],"/Users/mike/Documents/cintsa-cms/src/reportWebVitals.ts",[],"/Users/mike/Documents/cintsa-cms/src/App.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/Router/Router.tsx",["145"],"import React, { createContext, useEffect, useReducer, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport PiecesPage from '../PiecesPage/PiecesPage';\nimport { InitialState } from '../../types/types';\nimport { Reducer, STATE_SET } from '../../state/Reducer';\nimport StorageHandler from '../../state/StorageHandler';\nimport ContentEditorPage from '../ContentEditorPage/ContentEditorPage';\n\nconst initialState: InitialState = {\n  pieces: {},\n  layouts: []\n};\n\ninterface ContextType {\n  appState: InitialState;\n  dispatch: any\n}\n\nexport const AppContext = createContext<ContextType>({ appState: initialState, dispatch: null });\n\nconst AppRouter = () => {\n  const [appState, dispatch] = useReducer(Reducer, initialState);\n  const [loading, setLoading] = useState(false);\n  \n  useEffect(() => {\n    const storageHandler = new StorageHandler();\n    setLoading(true);\n    storageHandler.getStorageState().then((state: InitialState) => {\n      console.log(state);\n      dispatch({\n        type: STATE_SET,\n        payload: state\n      });\n      setLoading(false);\n    });\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ appState, dispatch }}>\n      <Header />\n      <Route exact path=\"/admin\">\n        <PiecesPage />\n      </Route>\n      <Route exact path=\"/admin/content/:piece\">\n        <PiecesPage />\n      </Route>\n      <Route path=\"/admin/content/:pieceName/:slug\">\n        <ContentEditorPage />\n      </Route>\n      <Route exact path=\"/admin/media\">\n      </Route>\n    </AppContext.Provider>\n  )\n};\n\nexport default AppRouter;\n","/Users/mike/Documents/cintsa-cms/src/components/styled/Theme.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/styled/Blanket.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/styled/Modal.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/Authenticator/Authenticor.tsx",["146","147","148","149"],"/Users/mike/Documents/cintsa-cms/src/components/Header/Header.tsx",["150","151"],"import react, { useEffect } from 'react';\nimport { HeaderContainer, NavButton } from './HeaderStyles';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as BookIcon } from '../../icons/book.svg';\nimport { ReactComponent as ImageIcon } from '../../icons/image.svg';\nimport { useLocation } from 'react-router-dom'\n\nconst Header = () => {\n    const location = useLocation();\n\n    const isMediaPath = () => {\n        return /media/.test(location.pathname);\n    }\n\n    return (\n        <HeaderContainer>\n            <NavButton active={!isMediaPath()}>\n                <Link to='/admin'>\n                    <BookIcon />\n                    Content\n                </Link>\n            </NavButton>\n            <NavButton active={isMediaPath()}>\n                <Link to='/admin/media'>\n                    <ImageIcon />\n                    Media\n                </Link>\n            </NavButton>\n        </HeaderContainer>\n    )\n};\n\nexport default Header;","/Users/mike/Documents/cintsa-cms/src/components/Header/HeaderStyles.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/styled/Page.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/Button/Button.tsx",[],"/Users/mike/Documents/cintsa-cms/src/state/Reducer.ts",["152"],"import { Piece, InitialState } from \"../types/types\";\nimport { updatePiece } from \"./Modifiers\";\n\nexport const STATE_SET = 'SET_STATE';\nexport const PIECE_UPDATED = 'PIECE_UPDATED';\n\nexport const Reducer = (state: InitialState, action: { type: string, payload: any}): InitialState => {\n  switch (action.type) {\n    case STATE_SET:\n      return action.payload;\n    case PIECE_UPDATED:\n      const newState = updatePiece(state, action.payload);\n      return newState;\n  }\n  return state;\n};","/Users/mike/Documents/cintsa-cms/src/state/StorageHandler.ts",["153"],"import { Storage } from 'aws-amplify';\nimport { InitialState, Piece } from '../types/types';\nimport FileContentHandler from './FileContentHandler';\nimport { v4 as uuid } from 'uuid';\n\nclass StorageHandler {\n  \n  fileHandler: FileContentHandler;\n  bucketUrl: string = '';\n\n  constructor() {\n    this.fileHandler = new FileContentHandler();\n  }\n\n  /**\n   * Get layouts options from /admin/layouts\n   */\n  async getLayouts(): Promise<string[]> {\n    return Storage.list('admin/layouts')\n      .then((keys: any[]) => {\n          return keys.map((key: any) => {\n            const layoutNameMatch = /admin\\/layouts\\/(.*)\\.njk/;\n            const match = layoutNameMatch.exec(key.key)\n            if (match) {\n              return match[1];\n            }\n            return '';\n          })\n      })\n      .catch(err => {\n        console.error(err);\n        return [];\n      });\n  }\n\n\n  /**\n   * Get all piece content from S3 in /admin/<pieceName>/<post name>\n   */\n  async getPieces(): Promise<{[key: string]: Piece[]}> {\n    const requests: Promise<void>[] = [];\n    return Storage.list('admin/pieces')\n      .then((keys: any[]) => {\n        const pieces: {[key: string]: Piece[]} = {};\n        keys.forEach((key => {\n          const pathMatch =  /admin\\/pieces\\/(.*)\\/(.*)?/;\n          const match = pathMatch.exec(key.key)\n          if (match) {\n            const pieceName = match[1];\n            const filename = match[2];\n            if (pieceName) {\n              const filePromise = this.getFile(key.key).then((post: Piece) => {\n                if (pieces[pieceName]) {\n                  pieces[pieceName] = [ ...pieces[pieceName], post ];\n                }\n                else {\n                  pieces[pieceName] = [post];\n                }\n              });\n              requests.push(filePromise);\n            }\n          }\n        }));\n        return Promise.all(requests).then(() => {\n          return pieces;\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        return {};\n      });\n  }\n\n  /**\n   * Get a file from S3 and return the Piece definition with markdown content\n   * @param filePath S3 key of file\n   */\n  async getFile(filePath: string): Promise<Piece> {\n    return Storage.get(filePath, { download: true, cacheControl: 'no-cache' })\n      .then((res: any) => {\n        return res.Body.text();\n      })\n      .then((res: string) => {\n        const fileData = this.fileHandler.markdownToPiece(res);\n        return fileData;\n      });\n  }\n\n  async savePiece(piece: Piece): Promise<Piece> {\n    const content = this.fileHandler.pieceToMarkdown(piece);\n    return Storage.put(`admin/pieces/${piece.slug}.md`, content).then((res: any) => {\n      return piece;\n    });\n  }\n\n  async getStorageState(): Promise<InitialState> {\n    const layouts = await this.getLayouts();\n    const pieces = await this.getPieces();\n    return Promise.all([layouts, pieces]).then(([ layouts, pieces ]) => {\n      return { layouts, pieces };\n    });\n  };\n\n  async uploadImage(arrayBuffer: ArrayBuffer): Promise<{key: string}> {\n    const blob = new Blob([arrayBuffer]);\n    return Storage.put(`assets/img/${uuid()}.jpg`, blob, {\n        contentType: 'image/jpg'\n    })\n    .catch(err => {\n      console.error(err);\n      return err;\n    })\n  }\n\n}\n\nexport default StorageHandler;","/Users/mike/Documents/cintsa-cms/src/components/Workflow/Workflow.tsx",["154"],"import { Piece } from \"../../types/types\";\nimport { ChangeEvent, useContext, useEffect, useState } from \"react\"\nimport { AppContext } from \"../Router/Router\"\nimport { useParams } from 'react-router-dom';\nimport { WorkflowContainer, Workflows } from \"./StyledWorkflow\";\nimport WorkflowColumn from \"./WorkflowColumn\";\nimport WorkflowHeader from \"./WorkflowHeader\";\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { PIECE_UPDATED } from \"../../state/Reducer\";\n\ntype Content = {\n    draft: Piece[],\n    review: Piece[],\n    published: Piece[],\n    [key: string]: Piece[]\n};\n\ninterface RouteParams {\n    piece: string\n}\n\nconst Workflow = () => {\n  const { appState, dispatch } = useContext(AppContext);\n  const { piece } = useParams<RouteParams>()\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [content, setContent] = useState<Content>({\n    draft: [],\n    review: [],\n    published: []\n  });\n  const [filteredContent, setFilteredContent] = useState<Content>(content);\n\n  const getContent = (contentList: Piece[]): Content => {\n    const structuredContent: Content = contentList.reduce<Content>((main: Content, item: Piece) => {\n      main[item.status] = [ ...main[item.status], item ];\n      return main;\n    }, { draft: [], review: [], published: [] });\n    return structuredContent;\n  }\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target;\n    if (value) {\n      setSearchTerm(value);\n      setFilteredContent(filterContent(value, content));\n    }\n    else {\n      setFilteredContent(content);\n    }\n  };\n\n  const filterContent = (searchVal: string, structuredContent: Content): Content => {\n    const newContent: Content = { draft: [], review: [], published: [] };\n    Object.keys(structuredContent).forEach((key: string) => {\n      const filtered = structuredContent[key].filter((post: Piece) => post.title.toLowerCase().includes(searchVal.toLowerCase()));\n      newContent[key] = filtered;\n    });\n    return newContent;\n  }\n\n  useEffect(() => {\n    if (piece) {\n      const structuredContent = getContent(appState.pieces[piece])\n      setContent(structuredContent);\n      setFilteredContent(filterContent(searchTerm, structuredContent));\n    }\n  }, [appState, piece]);\n\n  const onPostMove = (event: { piece: Piece }, moveTo: string): void => {\n    dispatch({\n      type: PIECE_UPDATED,\n      payload: {\n        pieceName: piece,\n        piece: {\n          ...event.piece,\n          status: moveTo\n        }\n      }\n    });\n  };\n\n  return  (\n    <WorkflowContainer>\n      <WorkflowHeader pieceName={piece} onSearch={onSearch} />\n      <Workflows>\n        <DndProvider backend={HTML5Backend}>\n          <WorkflowColumn content={filteredContent.draft} stage={'draft'} onPostMove={onPostMove} />\n          <WorkflowColumn content={filteredContent.review} stage={'review'} onPostMove={onPostMove} />\n          <WorkflowColumn content={filteredContent.published} stage={'published'} onPostMove={onPostMove} />\n        </DndProvider>\n      </Workflows>\n    </WorkflowContainer>\n  )\n}\n\nexport default Workflow;","/Users/mike/Documents/cintsa-cms/src/components/Workflow/StyledWorkflow.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowColumn.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowCard.tsx",["155"],"import { Piece } from '../../types/types';\nimport { WorkflowCardContainer } from './StyledWorkflow';\nimport { ReactComponent as PaperIcon } from '../../icons/paper.svg';\nimport { Link } from 'react-router-dom';\nimport { useDrag } from 'react-dnd'\n\nconst WorkflowCard = ({ piece }: { piece: Piece }) => {\n    \n    const [collectedProps, drag] = useDrag({\n        item: { type: 'card', piece }\n      });\n\n    return (\n        <Link to={`/admin/content/${piece.slug}`} ref={drag}>\n            <WorkflowCardContainer>\n                <PaperIcon />\n                {piece.title}\n            </WorkflowCardContainer>\n        </Link>\n    )\n}\n\nexport default WorkflowCard;","/Users/mike/Documents/cintsa-cms/src/components/Workflow/WorkflowHeader.tsx",[],"/Users/mike/Documents/cintsa-cms/src/state/FileContentHandler.ts",["156"],"import { Piece } from \"../types/types\";\nimport fm, { FrontMatterResult } from 'front-matter';\nimport { v4 as uuid } from 'uuid';\n\nclass FileContentHandler {\n\n  constructor() {\n\n  }\n\n  /**\n   * Convert a piece object into markdown\n   * @param post \n   */\n  pieceToMarkdown(post: Piece): string {\n    let markDownResult = '';\n    const frontMatterSep = '---\\n';\n    markDownResult += frontMatterSep;\n    Object.keys(post).forEach((key: string) => {\n      // 'content' and 'id' are specials keys that are not stored in front matter\n      if (key !== 'content' && key !== 'id') {\n        markDownResult += `${key}: ${post[key]}\\n`;\n      }\n    });\n    markDownResult += frontMatterSep;\n    markDownResult += post.content;\n    return markDownResult;\n  }\n\n  /**\n   * Convert markdown into a Piece object\n   * @param text markdown file context\n   */\n  markdownToPiece(text: string): Piece {\n    const frontMatter: FrontMatterResult<Piece> = fm(text);\n    const fileData: Piece = {\n      ...frontMatter.attributes,\n      content: frontMatter.body,\n      id: uuid()\n    }\n    return fileData;\n  }\n}\n\nexport default FileContentHandler;","/Users/mike/Documents/cintsa-cms/src/state/Modifiers.ts",[],"/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/StyledContextEditor.jsx",[],["157","158"],"/Users/mike/Documents/cintsa-cms/src/components/PiecesPage/PiecesPage.tsx",["159"],"import react from 'react'\nimport PiecesSidebar from '../PiecesSidebar/PiecesSidebar';\nimport Page from '../styled/Page';\nimport Workflow from '../Workflow/Workflow';\nimport { PiecesPageContainer } from './StyledPiecesPage';\n\nconst PiecesPage = () => {\n    \n    return (\n        <Page>\n            <PiecesPageContainer>\n                <PiecesSidebar />\n                <Workflow />\n            </PiecesPageContainer>\n        </Page>\n    )\n};\n\nexport default PiecesPage;","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorPage.tsx",["160"],"import { ContentEditorContainer, ContentEditorHeader, PieceEditorContainer } from \"./StyledContextEditor\"\nimport Page from \"../styled/Page\";\nimport { useParams } from \"react-router-dom\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../Router/Router\";\nimport { Piece } from '../../types/types';\nimport ContentEditorSidebar from \"./ContentEditorSidebar\";\nimport ContentEditorTitle from \"./ContentEditorTitle\";\nimport cogoToast from \"cogo-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport { PIECE_UPDATED } from '../../state/Reducer';\n\nconst emptyPiece: Piece = {\n  id: '',\n  title: '',\n  layout: '',\n  status: 'draft',\n  slug: '',\n  name: ''\n};\n\nconst ContentEditorPage = () => {\n  const { pieceName, slug } = useParams<{ pieceName: string, slug: string }>();\n  const { appState, dispatch } = useContext(AppContext);\n  const [piece, setPiece] = useState<Piece>(emptyPiece);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (pieceName && appState.pieces[pieceName]) {\n      const post = appState.pieces[pieceName].find((post: Piece) => (\n          post.slug === `${pieceName}/${slug}`\n      ));\n      setPiece(post || emptyPiece);\n    }\n  }, [pieceName, slug]);\n\n  const slugify = (text: string): string => {\n    const slug = text.toLowerCase()\n    .replace(/[^\\w ]+/g,'')\n    .replace(/ +/g,'-');\n    return `${pieceName}/${slug}`\n  };\n\n  const updatePiece = (updates: Partial<Piece>) => {\n    if (updates.title) {\n      updates.slug = slugify(updates.title);\n    }\n    setPiece({\n      ...piece,\n      ...updates\n    });\n  };\n\n  const savePiece = (): void => {\n    cogoToast.loading('Saving piece...').then(() => {\n      dispatch({\n        type: PIECE_UPDATED,\n        payload: {\n          pieceName,\n          piece\n        }\n      })\n      history.push(`/admin/content/${pieceName}`);\n    })\n  }\n\n  const editorProps = {\n    pieceName,\n    onUpdate: updatePiece\n  }\n\n  return (\n    <Page>\n      <ContentEditorContainer>\n        <ContentEditorHeader>\n          <ContentEditorTitle {...editorProps} title={piece.title} onSave={savePiece}/>\n        </ContentEditorHeader>\n        <PieceEditorContainer>\n          <ContentEditorSidebar \n            {...editorProps}  \n            {...piece}\n          />\n          <MarkdownEditor onUpdate={updatePiece} content={piece.content} />\n        </PieceEditorContainer>\n      </ContentEditorContainer>\n    </Page>\n  )\n};\n\nexport default ContentEditorPage;","/Users/mike/Documents/cintsa-cms/src/components/PiecesPage/StyledPiecesPage.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/PiecesSidebar/PiecesSidebar.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/PiecesSidebar/StyledPiecesSidebar.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/PieceCard/PieceCard.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorSidebar.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/MarkdownEditor.tsx",[],"/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/ContentEditorTitle.tsx",["161","162"],"import React from 'react';\nimport { ChangeEvent } from \"react\";\nimport { Piece } from \"../../types/types\";\nimport { ButtonContainer, TitleContainer } from \"./StyledContextEditor\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from '../../icons/arrowLeft.svg';\nimport Button from '../Button/Button';\n\n\nconst ContentEditorTitle = ({ pieceName, title, onUpdate, onSave }: { pieceName: string, title: string, onUpdate: Function, onSave: Function }) => {\n\n  const updateTitle = async (e: ChangeEvent<HTMLInputElement>) => {\n    const { value }: { value: string } = e.target;\n    onUpdate({\n      title: value\n    });\n  };\n\n  return (\n    <TitleContainer>\n      <input defaultValue={title} name=\"title\" type=\"text\" onChange={updateTitle} />\n      <ButtonContainer>\n        <Link to={`/admin/content/${pieceName}`}>\n          <Button>Cancel</Button>\n        </Link>\n        <Button color=\"success\" onClick={e => onSave()}>Save</Button>\n      </ButtonContainer>\n    </TitleContainer>\n  )\n};\n\nexport default React.memo(ContentEditorTitle);","/Users/mike/Documents/cintsa-cms/src/components/ContentEditorPage/FrontMatterList.tsx",["163","164"],"import { Piece } from \"../../types/types\";\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport { FrontMatterContainer, FrontMatter } from './StyledContextEditor';\nimport Button from \"../Button/Button\";\nimport cogoToast from \"cogo-toast\";\n\ninterface Props extends Piece {\n  onUpdate: Function\n}\n\ninterface FMKey {\n  key: string;\n  value: string;\n}\n\nconst FrontMatterList = ({ onUpdate, ...data }: Props) => {\n\n  const [frontMatter, setFrontMatter] = useState<FMKey[]>([]);\n\n  const reservedKeys = ['content', 'layout', 'title', 'slug', 'id', 'status'];\n\n  useEffect(() => {\n    const fm: FMKey[] = []\n    Object.keys(data).forEach((key: string) => {\n      if (!reservedKeys.includes(key)) {\n        fm.push({\n          key,\n          value: data[key]\n        });\n      }\n    });\n    setFrontMatter(fm);\n  }, []);\n\n  const update = async (fm: FMKey[]) => {\n    setFrontMatter(fm);\n    const pieceVals: {[key: string]: string} = {};\n    fm.forEach(({ key, value }: FMKey) => {\n      pieceVals[key] = value;\n    });\n    onUpdate({\n      ...data,\n\n    })\n  }\n\n  const updateFmPropery = (prop: 'key' | 'value', key: string, e: ChangeEvent<HTMLInputElement>): void => {\n    const newFm = [ ...frontMatter ];\n    const inputVal = e.target.value;\n    const fmKeyIndex: number = frontMatter.findIndex((fm: FMKey) => fm.key === key);\n    newFm[fmKeyIndex] = {\n      key: prop === 'key' ? formatFmKey(inputVal) : newFm[fmKeyIndex].key,\n      value: prop === 'value' ? inputVal : newFm[fmKeyIndex].value,\n    };\n    setFrontMatter(newFm);\n  }\n\n  const addKey = () => {\n    const newFm = [ ...frontMatter ];\n    newFm.push({\n      key: '',\n      value: ''\n    });\n    setFrontMatter(newFm);\n  }\n\n  const deleteKey = (key: string) => {\n    const newFm = [ ...frontMatter ];\n    const fmKeyIndex: number = frontMatter.findIndex((fm: FMKey) => fm.key === key);\n    newFm.splice(fmKeyIndex, 1);\n    setFrontMatter(newFm);\n  }\n\n  const formatFmKey = (key: string): string => {\n    if (reservedKeys.includes(key)) {\n      cogoToast.error(`${key} is a reserved key`);\n      return key.slice(0, key.length - 1)\n    }\n    return key.replace(/\\W|_/g, '');\n  }\n\n  return (\n    <FrontMatter>\n      <label>Additional data</label>\n      <p>You can add additional key-value data to be added to the front-matter of your post.</p>\n      {\n        !!frontMatter.length && frontMatter.map(({ key, value }: FMKey, index: number) => (\n          <FrontMatterContainer key={index}>\n            <label>Key\n              <input type=\"text\" value={key} onChange={e => updateFmPropery('key', key, e)} />\n            </label>\n            <label>Value\n              <input type=\"text\" value={value} onChange={e => updateFmPropery('value', key, e)} />\n            </label>\n            <Button color=\"danger\" onClick={e => deleteKey(key)}>x</Button>\n          </FrontMatterContainer>\n        ))\n      }\n      <Button onClick={addKey}>Add</Button>\n    </FrontMatter>  \n  )\n};\n\nexport default FrontMatterList;",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":24,"column":10,"nodeType":"171","messageId":"172","endLine":24,"endColumn":17},{"ruleId":"169","severity":1,"message":"173","line":3,"column":32,"nodeType":"171","messageId":"172","endLine":3,"endColumn":46},{"ruleId":"169","severity":1,"message":"174","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":19},{"ruleId":"169","severity":1,"message":"175","line":10,"column":11,"nodeType":"171","messageId":"172","endLine":10,"endColumn":19},{"ruleId":"169","severity":1,"message":"176","line":10,"column":21,"nodeType":"171","messageId":"172","endLine":10,"endColumn":29},{"ruleId":"169","severity":1,"message":"177","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"179","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":50,"column":19,"nodeType":"171","messageId":"172","endLine":50,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":68,"column":6,"nodeType":"183","endLine":68,"endColumn":23,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"185","line":9,"column":12,"nodeType":"171","messageId":"172","endLine":9,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":7,"column":3,"nodeType":"188","messageId":"189","endLine":9,"endColumn":4},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"190","line":36,"column":6,"nodeType":"183","endLine":36,"endColumn":23,"suggestions":"191"},{"ruleId":"169","severity":1,"message":"179","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":15},{"ruleId":"169","severity":1,"message":"192","line":6,"column":28,"nodeType":"171","messageId":"172","endLine":6,"endColumn":37},{"ruleId":"181","severity":1,"message":"193","line":33,"column":6,"nodeType":"183","endLine":33,"endColumn":8,"suggestions":"194"},{"ruleId":"169","severity":1,"message":"195","line":35,"column":9,"nodeType":"171","messageId":"172","endLine":35,"endColumn":15},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'AmplifySignOut' is defined but never used.","'STATE_SET' is defined but never used.","'appState' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'react' is defined but never used.","'useEffect' is defined but never used.","'Piece' is defined but never used.","'filename' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredContent' needs the current value of 'searchTerm'.","ArrayExpression",["198"],"'collectedProps' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has a missing dependency: 'appState.pieces'. Either include it or remove the dependency array.",["199"],"'ArrowLeft' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'reservedKeys'. Either include them or remove the dependency array.",["200"],"'update' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [appState, piece, searchTerm]",{"range":"207","text":"208"},"Update the dependencies array to be: [appState.pieces, pieceName, slug]",{"range":"209","text":"210"},"Update the dependencies array to be: [data, reservedKeys]",{"range":"211","text":"212"},[2272,2289],"[appState, piece, searchTerm]",[1249,1266],"[appState.pieces, pieceName, slug]",[820,822],"[data, reservedKeys]"]